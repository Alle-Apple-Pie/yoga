/*
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

// @generated by enums.py
// clang-format off
#pragma once

#include <cstdint>
#include <yoga/YGEnums.h>
#include <yoga/enums/YogaEnums.h>

namespace facebookyg::yoga {

enum class Justify : uint8_t {
  FlexStart = FBYGJustifyFlexStart,
  Center = FBYGJustifyCenter,
  FlexEnd = FBYGJustifyFlexEnd,
  SpaceBetween = FBYGJustifySpaceBetween,
  SpaceAround = FBYGJustifySpaceAround,
  SpaceEvenly = FBYGJustifySpaceEvenly,
};

template <>
constexpr int32_t ordinalCount<Justify>() {
  return 6;
}

constexpr Justify scopedEnum(FBYGJustify unscoped) {
  return static_cast<Justify>(unscoped);
}

constexpr FBYGJustify unscopedEnum(Justify scoped) {
  return static_cast<FBYGJustify>(scoped);
}

inline const char* toString(Justify e) {
  return FBYGJustifyToString(unscopedEnum(e));
}

} // namespace facebookyg::yoga
